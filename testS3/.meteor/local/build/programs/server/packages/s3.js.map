{"version":3,"file":"/packages/s3.js","sources":["s3/s3server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,2B;AACA,0C;;AAEA,S;AACA,Q;AACA,4B;;AAEA,0B;AACA,qC;AACA,G;;AAEA,gB;AACA,0C;AACA,4B;;AAEA,yD;AACA,sC;AACA,gI;;AAEA,qC;;AAEA,qG;AACA,U;AACA,wB;AACA,W;AACA,mB;AACA,I;AACA,K;;AAEA,gC;AACA,sC;AACA,qC;AACA,c;AACA,G;AACA,G;AACA,mC;AACA,uC;AACA,S;AACA,mB;AACA,uB;AACA,0B;AACA,I;AACA,K;AACA,E;AACA,G","sourcesContent":["Knox = Npm.require(\"knox\");\nvar Future = Npm.require('fibers/future');\n\nvar knox;\nS3 = {};\nS3.config = {directory:\"/\"};\n\nMeteor.startup(function(){\n\tknox = Knox.createClient(S3.config);\n});\n\nMeteor.methods({\n\tS3upload:function(file,context,callback){\n\t\tvar future = new Future();\n\n\t\tvar extension = (file.name).match(/\\.[0-9a-z]{1,5}$/i);\n\t\tfile.name = Meteor.uuid()+extension;\n    var path = ( S3.config.directory === undefined || S3.config.directory === null) ? file.name : S3.config.directory+file.name;\n\n\t\tvar buffer = new Buffer(file.data);\n\n\t\tknox.putBuffer(buffer,path,{\"Content-Type\":file.type,\"Content-Length\":buffer.length},function(e,r){\n\t\t\tif(!e){\n\t\t\t\tfuture.return(path);\n\t\t\t} else {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t});\n\n\t\tif(future.wait() && callback){\n\t\t\tvar url = knox.http(future.wait());\n\t\t\tMeteor.call(callback,url,context);\n\t\t\treturn url;\n\t\t}\n\t},\n\tS3delete:function(path, callback){\n\t\tknox.deleteFile(path, function(e,r) {\n\t\t\tif(e){\n\t\t\t\tconsole.log(e);\n\t\t\t}\telse if(callback){\n\t\t\t\tMeteor.call(callback);\n\t\t\t}\n\t\t});\n\t}\n});\n"]}